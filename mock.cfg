config_opts['environment']['VERSION'] = os.environ['VERSION']
config_opts['environment']['BUILD_TIME'] = os.environ['BUILD_TIME']
config_opts['environment']['SHA'] = os.environ['SHA']
config_opts['environment']['SHORT_SHA'] = os.environ['SHORT_SHA']
# FIXME It says "KeyError" when I try to use this
# environment variable, but hardcoding it is fine.
config_opts['environment']['GOVERSION'] = "1.8.3"
config_opts['environment']['GOROOT'] = os.environ['GOROOT']
config_opts['environment']['GOPATH'] = "/go"

# FIXME env vars don't work for gopath, but they do work for goroot
config_opts['plugin_conf']['bind_mount_opts']['dirs'].append(('/go', '/go' ))
config_opts['plugin_conf']['bind_mount_opts']['dirs'].append((os.environ['GOROOT'], os.environ['GOROOT']))

# This doesn't seem to work on Docker
#config_opts['plugin_conf']['tmpfs_enable'] = True
#config_opts['plugin_conf']['tmpfs_opts'] = {}
#config_opts['plugin_conf']['tmpfs_opts']['required_ram_mb'] = 1024
#config_opts['plugin_conf']['tmpfs_opts']['max_fs_size'] = '768m'
#config_opts['plugin_conf']['tmpfs_opts']['mode'] = '0755'
#config_opts['plugin_conf']['tmpfs_opts']['keep_mounted'] = True

config_opts['plugin_conf']['sign_enable'] = False
config_opts['plugin_conf']['sign_opts'] = {}
config_opts['plugin_conf']['sign_opts']['cmd'] = 'rpmsign'
# The options to pass to the signing command. %(rpms)s will be expanded to
# the rpms in the results folder.
config_opts['plugin_conf']['sign_opts']['opts'] = '--addsign %(rpms)s -D "%%_gpg_name your_name" -D "%%_gpg_path /home/your_name/.gnupg'
